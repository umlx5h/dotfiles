# ----------------------------------------- tmux sensible --------------------------------------------
# https://github.com/tmux-plugins/tmux-sensible

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
# change 0 to 15, defualt: 500
set -s escape-time 15

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# (OS X) Fix pbcopy/pbpaste for old tmux versions (pre 2.6)
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# Upgrade $TERM
# set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# ----------------------------------------- my settings --------------------------------------------

{{ if .isLocal -}}
# prefixキーをC-qに変更
set -g prefix C-q
# C-q*2でC-qを送る
bind-key C-q send-prefix

# C-bのキーバインドを解除
unbind C-b

# https://github.com/wfxr/tmux-power
#set -g @plugin 'wfxr/tmux-power'
set -g @tmux_power_theme 'sky'

# 斜体などの表示に対応
set-option -g default-terminal tmux-256color

# for wezterm
# see: https://wezfurlong.org/wezterm/shell-integration.html?h=shell+integration
set -g allow-passthrough on

# True color support
set-option -sa terminal-features ",xterm-256color:RGB"

{{- else }}

# サブのprefixキーをC-qに変更 (二重tmuxにも対応)
set -g prefix2 C-q
# C-q*2でC-qを送る
bind-key C-q send-prefix

set -g @tmux_power_theme 'everforest'

# 斜体に対応していないが、互換性重視で
set-option -g default-terminal screen-256color

# True color support (support tmux old version)
set-option -ga terminal-overrides ',xterm-256color:Tc'

{{- end }}

# theme
run-shell "~/.tmux/tmux-power.tmux"

# 2重tmuxでもクリップボードコピーできるようにする OSC52
set-option -g set-clipboard on

# vimのキーバインドでペインを移動する
# 循環するのをifで防止
bind h if -F '#{pane_at_left}' '' 'select-pane -L'
bind j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind k if -F '#{pane_at_top}' '' 'select-pane -U'
bind l if -F '#{pane_at_right}' '' 'select-pane -R'

# 標準矢印キーのキーリピートを無効化
bind-key    Up select-pane -U
bind-key  Down select-pane -D
bind-key  Left select-pane -L
bind-key Right select-pane -R

# Use Alt-hjkl keys without prefix key to switch panes
bind -n M-h if -F '#{pane_at_left}' '' 'select-pane -L'
bind -n M-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -n M-k if -F '#{pane_at_top}' '' 'select-pane -U'
bind -n M-l if -F '#{pane_at_right}' '' 'select-pane -R'

## ペインの順次移動をAlt + o に設定
# bind -n M-o select-pane -t :.+

# 前のウィンドウにiで切り替え
bind-key i last-window
bind -n M-i last-window

# セッション切り替えをリピート可能にする
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n

# ウィンドウ移動をAlt + ()に設定
bind -n M-9 previous-window
bind -n M-0 next-window

# vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Alt+数字でウィンドウ移動
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8

# / でペインを縦分割する
bind / split-window -hc "#{pane_current_path}"

# - でペインを縦分割する
bind - split-window -vc "#{pane_current_path}"

# カレントディレクトリ維持
bind c new-window -c "#{pane_current_path}"

## ウィンドウのインデックスを1から始める
set -g base-index 1
## ペインのインデックスを1から始める
setw -g pane-base-index 1
# セッションの番号を1から始める
set-option -g @first-run 1
set-hook -g session-created {
    if-shell -F '#{?@first-run,1,0}' {
        set-option -g @first-run 0
        if-shell -F '#{==:#{session_name},0}' { rename-session 1 }
    }
}

# マウス操作を有効にする
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# Explicit `Enter` key fires copying the selection
unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane

# コピーモードを設定する
# コピーモードでvimキーバインドを使う
setw -g mode-keys vi

# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection

# 'V' で行選択
bind -T copy-mode-vi V send -X select-line

# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

# 'y' でヤンク
bind -T copy-mode-vi y send -X copy-selection
# F3でもヤンク
bind -T copy-mode-vi F3 send -X copy-selection

# 'Y' で行ヤンク
bind -T copy-mode-vi Y send -X copy-line

# 'C-p'でペースト
bind-key C-p paste-buffer

# ウィンドウ番号の連番を振りなおす
set-option -g renumber-windows on

