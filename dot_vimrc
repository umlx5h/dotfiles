" ------------------------- basic config  ------------------------------ "
" デフォルト設定を読み込む
source $VIMRUNTIME/defaults.vim
" q: のヒントメッセージを無効
:augroup vimHints | exe 'au!' | augroup END
" %表示だけ有効化
set rulerformat=%=%P

" マウスを有効化
set ttymouse=xterm2
set mouse=a

" leader is <Space>
map <space> <leader>

" Macで色をつける
syntax on

" 相対行番号に変更
set relativenumber
set number

" 相対行番号でカーソル位置を中央に置くことで見やすくする
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

" インサートモードでカーソルを見やすくする
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" ESCを速くする
set timeoutlen=400
set ttimeout
set ttimeoutlen=50

" tmux経由の時にCTRL-Left, Rightが動くようにする
if &term =~ '^screen' || &term =~ '^tmux'
  execute "set <xUp>=\e[1;*A"
  execute "set <xDown>=\e[1;*B"
  execute "set <xRight>=\e[1;*C"
  execute "set <xLeft>=\e[1;*D"
endif

" コマンドモードの補完を使いやすく
set wildmenu
set wildmode=full

" コマンド履歴を増やす
set history=10000

" ヘルプを日本語化
" set helplang=ja,en

" 検索を使いやすく
set hlsearch
set incsearch
set ignorecase
set smartcase

" 検索を見やすく
highlight Search ctermbg=yellow ctermfg=black guibg=yellow guifg=black
highlight CurSearch ctermbg=cyan ctermfg=black guibg=cyan guifg=black
" ESC x 2でハイライトリセット
nnoremap <silent> <ESC><ESC> :nohlsearch<CR>

" 完全一致検索
" substituteは複数行に対応するため
nnoremap <leader>s :execute '/\V' . substitute(escape(input('Search literally: '), '/\'), '\\n', 'n', 'g')<CR>

" * or # で選択中のテキストで検索 (neovimと同じ)
xnoremap * :<C-u>call <SID>VSetSearch('/')<CR>/<C-R>=@/<CR><CR>
xnoremap # :<C-u>call <SID>VSetSearch('?')<CR>?<C-R>=@/<CR><CR>
function! s:VSetSearch(cmdtype)
  let temp = @s
  norm! gv"sy
  let @/ = '\V' . substitute(escape(@s, a:cmdtype.'\'), '\n', '\\n', 'g')
  let @s = temp
endfunction

" バッファを編集していた場合に他のファイルを開けるようにする
set hidden

" コマンドラインモードでCTRL-% (CTRL-])で %:h に展開してくれる、現在開いているファイルを基準にパスを作成可能
cnoremap <expr> <C-]> getcmdtype() == ':' ? expand('%:h').'/' : '%%'

" ----------------------- keymap  ------------------------ "

" コマンドモードでCTRL-P,Nの挙動を矢印と入れ替える
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <Up> <C-p>
cnoremap <Down> <C-n>

" paste from 0 register
nnoremap <leader>p "0p
xnoremap <leader>p "0p
nnoremap <leader>P "0P
xnoremap <leader>P "0P

" vim-unimpaired
nnoremap <silent> [a :previous<CR>
nnoremap <silent> ]a :next<CR>
nnoremap <silent> [A :first<CR>
nnoremap <silent> ]A :last<CR>
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>
nnoremap <silent> [q :cprevious<CR>
nnoremap <silent> ]q :cnext<CR>
nnoremap <silent> [Q :cfirst<CR>
nnoremap <silent> ]Q :clast<CR>
nnoremap <silent> [t :tabprevious<CR>
nnoremap <silent> ]t :tabnext<CR>

" &でフラグを維持するように変更 (Neovimと同じ)
nnoremap & :&&<CR>
xnoremap & :&&<CR>

" ------------------------- plugin ------------------------------ "

" auto install plugin
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
Plug 'ojroques/vim-oscyank', {'branch': 'main'}
Plug 'vim-jp/vimdoc-ja'
call plug#end()

" ----------------------- plugin config  ------------------------ "

" ojroques/vim-oscyank
nmap <leader>y <Plug>OSCYankOperator
nmap <leader>yy <leader>y_
vmap <leader>y <Plug>OSCYankVisual

